---
version: 1.4.1
title: Mutation with InputObject variable
file: ./test/codegen_test.gleam
test_name: generate_mutation_with_input_object_test
---
import gleam/dynamic/decode
import gleam/json
import squall
import gleam/option.{type Option, Some, None}

pub type ProfileInput {
  ProfileInput(display_name: Option(String), description: Option(String))
}

fn profile_input_to_json(input: ProfileInput) -> json.Json {
  [{
      case input.display_name {
        Some(val) -> Some(#("displayName", json.string(val)))
        None -> None
      }
    }, {
      case input.description {
        Some(val) -> Some(#("description", json.string(val)))
        None -> None
      }
    }]
  |> list.filter_map(fn(x) {
    case x {
      Some(val) -> Ok(val)
      None -> Error(Nil)
    }
  })
  |> json.object
}

pub type Profile {
  Profile(id: String, display_name: Option(String))
}

pub fn profile_decoder() -> decode.Decoder(Profile) {
  use id <- decode.field("id", decode.string)
  use display_name <- decode.field("displayName", decode.optional(decode.string))
  decode.success(Profile(id: id, display_name: display_name))
}

pub fn profile_to_json(input: Profile) -> json.Json {
  json.object(
    [
      #("id", json.string(input.id)),
      #("displayName", json.nullable(input.display_name, json.string)),
    ],
  )
}

pub type UpdateProfileResponse {
  UpdateProfileResponse(update_profile: Option(Profile))
}

pub fn update_profile_response_decoder() -> decode.Decoder(UpdateProfileResponse) {
  use update_profile <- decode.field("updateProfile", decode.optional(profile_decoder()))
  decode.success(UpdateProfileResponse(update_profile: update_profile))
}

pub fn update_profile_response_to_json(input: UpdateProfileResponse) -> json.Json {
  json.object(
    [
      #("updateProfile", json.nullable(input.update_profile, profile_to_json)),
    ],
  )
}

pub fn update_profile(client: squall.Client, input: ProfileInput) {
  squall.execute_query(
    client,
    "mutation UpdateProfile($input: ProfileInput!) { updateProfile(input: $input) { id displayName } }",
    json.object([#("input", profile_input_to_json(input))]),
    update_profile_response_decoder(),
  )
}

